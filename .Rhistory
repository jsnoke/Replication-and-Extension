unlist(strsplit(ncaaBB[1, ], "  "))[!= ""]
x = unlist(strsplit(ncaaBB[1, ], "  "))
x[x != ""]
rm(ncaaBB)
take2 <- read.delim("~/Documents/Random/take2", header=FALSE)
View(take2)
take2 <- read.delim("~/Documents/Random/take2", header=FALSE, stringsAsFactors=FALSE)
View(take2)
x = unlist(strsplit(take2[1, ], "  "))
x[x != ""]
x[x != "" & != " "]
x[x != "" && != " "]
x[x != "" && x != " "]
x[x != "" & x != " "]
newDataMatrix = data.frame(matrix(NA, nrow = 5297, ncol = 6))
for(i in 1:nrow(take2)){
x = unlist(strsplit(take2[1, ], "  "))
newDataMatrix[i, ] = x[x != "" & x != " "]
}
for(i in 1:nrow(take2)){
x = unlist(strsplit(take2[1, ], "  "))
newDataMatrix[i, ] = c(x[x != "" & x != " "])
}
for(i in 1:nrow(take2)){
x = unlist(strsplit(take2[1, ], "  "))
foo = x[x != "" & x != " "]
newDataMatrix[i, 1:length(foo)] = foo
}
View(newDataMatrix)
summary(newDataMatrix)
colSums(is.na(newDataMatrix))
for(i in 1:nrow(take2)){
x = unlist(strsplit(take2[i, ], "  "))
foo = x[x != "" & x != " "]
newDataMatrix[i, 1:length(foo)] = foo
}
View(newDataMatrix)
colSums(is.na(newDataMatrix))
newDataMatrix[1,]
newDataMatrix[1,1]
strsplit(newDataMatrix[1,1], "@")
unlist(strsplit(newDataMatrix[1,1], "@"))
take2 <- read.delim("~/Documents/Random/take2", header=FALSE, stringsAsFactors=FALSE)
View(take2)
newDataMatrix = data.frame(matrix(NA, nrow = nrow(take2), ncol = 6))
for(i in 1:nrow(take2)){
x = unlist(strsplit(take2[i, ], "  "))
foo = x[x != "" & x != " "]
newDataMatrix[i, 1:length(foo)] = foo
}
View(newDataMatrix)
strsplit(newDataMatrix[1, ], "@")
strsplit(newDataMatrix[1, 1], "@")
strsplit(take2[1, ], "")
strsplit(take2[1, ], " ")
strsplit(take2[1, ], "@")
unlist(strsplit(take2[1, ], "@"))
strplit(unlist(strsplit(take2[1, ], "@"))[2], " ")
strsplit(unlist(strsplit(take2[1, ], "@"))[2], " ")
strsplit(unlist(strsplit(take2[1, ], "@"))[2], "  ")
strsplit(unlist(strsplit(take2[1, ], "@")), "  ")
unlist(strsplit(unlist(strsplit(take2[1, ], "@")), "  "))
?grepl
grepl(newDataMatrix[1, 1], "@")
newDataMatrix[1, 1]
grepl("@", newDataMatrix[1, 1])
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 6))
?while
strsplit(newDataMatrix[1, 1], "@")
for(i in 1:nrow(take2)){
j = 1
while(j < 7){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
} else{
newDataMatrix2[i, (j:j+1)] = strsplit(newDataMatrix[i, j], "@")
j = j + 2
}
}
}
head(warnings())
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 6))
for(i in 1:nrow(take2)){
j = 1
while(j < 7){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
} else{
newDataMatrix2[i, (j:j+1)] = unlist(strsplit(newDataMatrix[i, j], "@"))
j = j + 2
}
}
}
i
j
grepl("@", newDataMatrix[i, j]) == FALSE
newDataMatrix[i, j]
newDataMatrix2[i, j]
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
j
grepl("@", newDataMatrix[i, j]) == FALSE
newDataMatrix2[i, (j:j+1)] = unlist(strsplit(newDataMatrix[i, j], "@"))
View(newDataMatrix2)
newDataMatrix2[i, (j:j+1)]
newDataMatrix2[i, c(j:j+1)]
c(j:(j+1))
newDataMatrix2[i, c(j:(j+1))]
unlist(strsplit(newDataMatrix[i, j], "@"))
i = 1
j = 1
grepl("@", newDataMatrix[i, j]) == FALSE
newDataMatrix2[i, j]
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 6))
newDataMatrix2[i, j]
newDataMatrix[i, j]
grepl("@", newDataMatrix[i, j])
newDataMatrix2[i, c(j:(j+1))] = unlist(strsplit(newDataMatrix[i, j], "@"))
j = j + 2
View(newDataMatrix2)
j
grepl("@", newDataMatrix[i, j])
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
j
grepl("@", newDataMatrix[i, j])
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
grepl("@", newDataMatrix[i, j])
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
View(newDataMatrix2)
j
grepl("@", newDataMatrix[i, j])
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
j
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 8))
for(i in 1:nrow(take2)){
j = 1
k = j
while(j < 9){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, j] = newDataMatrix[i, j]
j = j + 1
k = k + 1
} else{
newDataMatrix2[i, c(k:(k+1))] = unlist(strsplit(newDataMatrix[i, j], "@"))
j = j + 1
k = k + 2
}
}
}
i
j
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 8))
for(i in 1:nrow(take2)){
j = 1
k = j
while(j < 7){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, k] = newDataMatrix[i, j]
j = j + 1
k = k + 1
} else{
newDataMatrix2[i, c(k:(k+1))] = unlist(strsplit(newDataMatrix[i, j], "@"))
j = j + 1
k = k + 2
}
}
}
View(newDataMatrix2)
summary(is.na(newDataMatrix2))
summary(grepl("@", newDataMatrix2))
summary(grepl("@", newDataMatrix2[,1]))
summary(grepl("@", newDataMatrix[,1]))
summary(grepl("@", newDataMatrix[,2]))
summary(grepl("@", newDataMatrix[,3]))
summary(grepl("@", newDataMatrix[,4]))
summary(grepl("@", newDataMatrix[,5]))
summary(grepl("@", newDataMatrix[,6]))
summary(newDataMatrix2[,3] - newDataMatrix2[,5])
summary(as.numeric(newDataMatrix2[,3]) - as.numeric(newDataMatrix2[,5]))
summary(as.numeric(newDataMatrix2[,3]))
summary(as.numeric(newDataMatrix2[,5]))
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 8))
for(i in 1:nrow(take2)){
j = 1
k = j
v = 0
while(j < 7){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, k] = newDataMatrix[i, j]
j = j + 1
k = k + 1
} else{
newDataMatrix2[i, c(k:(k+1))] = unlist(strsplit(newDataMatrix[i, j], "@"))
j = j + 1
k = k + 2
v = j
}
}
if(v == 1){
newDataMatrix2[i, 8] = "H"
} else if(v == 3){
newDataMatrix2[i, 8] = "A"
} else{
newDataMatrix2[i, 8] = "N"
}
}
View(newDataMatrix2)
v
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 8))
for(i in 1:nrow(take2)){
j = 1
k = j
v = 0
while(j < 7){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, k] = newDataMatrix[i, j]
j = j + 1
k = k + 1
} else{
newDataMatrix2[i, c(k:(k+1))] = unlist(strsplit(newDataMatrix[i, j], "@"))
v = j
j = j + 1
k = k + 2
}
}
if(v == 1){
newDataMatrix2[i, 8] = "H"
} else if(v == 3){
newDataMatrix2[i, 8] = "A"
} else{
newDataMatrix2[i, 8] = "N"
}
}
View(newDataMatrix2)
summary(as.factor(newDataMatrix2[,8]))
summary(grepl("O", newDataMatrix[,6]))
summary(grepl("O", newDataMatrix[,1]))
summary(grepl("O", newDataMatrix[,2]))
summary(grepl("O", newDataMatrix[,3]))
summary(grepl("O", newDataMatrix[,4]))
summary(grepl("O", newDataMatrix[,5]))
summary(grepl("O", newDataMatrix[,6]))
summary(grepl("O1", newDataMatrix[,6]))
summary(grepl("O1", newDataMatrix[,4]))
summary(grepl("O2", newDataMatrix[,4]))
summary(grepl("O2", newDataMatrix[,1]))
summary(grepl("O2", newDataMatrix[,2]))
summary(grepl("O2", newDataMatrix[,3]))
summary(grepl("O2", newDataMatrix[,5]))
summary(grepl("O2", newDataMatrix[,6]))
summary(grepl("O1", newDataMatrix[,6]))
summary(grepl("O1", newDataMatrix[,5]))
summary(grepl("O1", newDataMatrix[,4]))
summary(grepl("O1", newDataMatrix[,3]))
summary(grepl("O1", newDataMatrix[,w]))
summary(grepl("O1", newDataMatrix[,2]))
summary(grepl("O1", newDataMatrix[,1]))
summary(grepl("O1", newDataMatrix2[,5]))
summary(grepl("O1", newDataMatrix2[,6]))
summary(grepl("O1", newDataMatrix2[,4]))
summary(grepl("O1", newDataMatrix2[,3]))
summary(grepl("O1", newDataMatrix2[,7]))
summary(grepl("O1", newDataMatrix2[,6]))
summary(grepl("O2", newDataMatrix2[,6]))
summary(grepl("O2", newDataMatrix2[,5]))
strsplit(newDataMatrix2[56, 5], "O")
unlist(strsplit(newDataMatrix2[56, 5], "O"))
summary(grepl("O", newDataMatrix2[,5]))
summary(grepl("O3", newDataMatrix2[,5]))
summary(grepl("O4", newDataMatrix2[,5]))
summary(grepl("O5", newDataMatrix2[,5]))
summary(grepl("O6", newDataMatrix2[,5]))
summary(is.na(newDataMatrix2[,6]))
summary(is.na(newDataMatrix2[,7]))
i
newDataMatrix2[i, c(5,7)]
i = 56
newDataMatrix2[i, c(5,7)]
unlist(strsplit(newDataMatrix2[i, 5], "O"))
unlist(strsplit(newDataMatrix2[i, 5], "O"))[1]
unlist(strsplit(newDataMatrix2[i, 5], "O"))[2]
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 8))
for(i in 1:nrow(take2)){
j = 1
k = j
v = 0
while(j < 7){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, k] = newDataMatrix[i, j]
j = j + 1
k = k + 1
} else{
newDataMatrix2[i, c(k:(k+1))] = unlist(strsplit(newDataMatrix[i, j], "@"))
v = j
j = j + 1
k = k + 2
}
}
if(v == 1){
newDataMatrix2[i, 8] = "H"
} else if(v == 3){
newDataMatrix2[i, 8] = "A"
} else{
newDataMatrix2[i, 8] = "N"
}
if(grepl("O", newDataMatrix2[i, 5]) == FALSE){
newDataMatrix2[i, 7] = 0
} else{
newDataMatrix2[i, c(5,7)] = unlist(strsplit(newDataMatrix2[i, 5], "O"))
}
}
View(newDataMatrix2)
summary(newDataMatrix2[,7])
summary(as.factor(newDataMatrix2[,7]))
finalDataMatrix = data.frame(matrix(NA, ncol = 8, nrow = nrow(newDataMatrix2)))
colnames(finalDataMatrix) = c("date", "winning.team", "winning.score", "losing.team", "losing.score",
"neutral.site", "overtime", "location.winner")
finalDataMatrix[, "date"] = as.factor(newDataMatrix2[,1])
View(finalDataMatrix)
finalDataMatrix[, "winning.team"] = as.factor(newDataMatrix2[,2])
finalDataMatrix[, "winning.score"] = as.numeric(newDataMatrix2[, 3])
View(finalDataMatrix)
finalDataMatrix[, "losing.team"] = as.factor(newDataMatrix2[, 4])
finalDataMatrix[, "losing.score"] = as.numeric(newDataMatrix2[, 5])
finalDataMatrix[, "neutral.site"] = as.factor(newDataMatrix2[, 6])
finalDataMatrix[, "overtime"] = as.factor(newDataMatrix2[, 7])
finalDataMatrix[, "location.winner"] = as.factor(newDataMatrix2[, 8])
View(finalDataMatrix)
summary(finalDataMatrix)
plot(finalDataMatrix$winning.score, finalDataMatrix$losing.score)
summary(finalDataMatrix$winning.score - finalDataMatrix$losing.score)
hist(finalDataMatrix$winning.score - finalDataMatrix$losing.score)
source('~/Documents/Classes/Spring2016/PLSC597E/Homework/homework.R')
hist(betweenOut[1001:2000 , ])
hist(c(betweenOut[1001:2000 , ]))
class(betweenOut)
class(betweenOut[1001:2000,])
betweenOut = as.matrix(betweenOut)
hist(c(betweenOut[1001:2000 , ]))
hist(betweenOut[1001:2000 , ])
View(betweenOut)
hist(betweenOut[c(1001:2000) , ])
source('~/Documents/Classes/Spring2016/PLSC597E/Homework/homework.R')
setwd("~/Documents/Random")
take2 <- read.delim("~/Documents/Random/take2", header=FALSE, stringsAsFactors=FALSE)
newDataMatrix = data.frame(matrix(NA, nrow = nrow(take2), ncol = 6))
for(i in 1:nrow(take2)){
x = unlist(strsplit(take2[i, ], "  "))
foo = x[x != "" & x != " "]
newDataMatrix[i, 1:length(foo)] = foo
}
newDataMatrix2 = data.frame(matrix(NA, nrow = nrow(take2), ncol = 8))
for(i in 1:nrow(take2)){
j = 1
k = j
v = 0
while(j < 7){
if(grepl("@", newDataMatrix[i, j]) == FALSE){
newDataMatrix2[i, k] = newDataMatrix[i, j]
j = j + 1
k = k + 1
} else{
newDataMatrix2[i, c(k:(k+1))] = unlist(strsplit(newDataMatrix[i, j], "@"))
v = j
j = j + 1
k = k + 2
}
}
if(v == 1){
newDataMatrix2[i, 8] = "H"
} else if(v == 3){
newDataMatrix2[i, 8] = "A"
} else{
newDataMatrix2[i, 8] = "N"
}
if(grepl("O", newDataMatrix2[i, 5]) == FALSE){
newDataMatrix2[i, 7] = 0
} else{
newDataMatrix2[i, c(5,7)] = unlist(strsplit(newDataMatrix2[i, 5], "O"))
}
}
finalDataMatrix = data.frame(matrix(NA, ncol = 8, nrow = nrow(newDataMatrix2)))
colnames(finalDataMatrix) = c("date", "winning.team", "winning.score", "losing.team", "losing.score",
"neutral.site", "overtime", "location.winner")
finalDataMatrix[, "date"] = as.factor(newDataMatrix2[, 1])
finalDataMatrix[, "winning.team"] = as.factor(newDataMatrix2[, 2])
finalDataMatrix[, "winning.score"] = as.numeric(newDataMatrix2[, 3])
finalDataMatrix[, "losing.team"] = as.factor(newDataMatrix2[, 4])
finalDataMatrix[, "losing.score"] = as.numeric(newDataMatrix2[, 5])
finalDataMatrix[, "neutral.site"] = as.factor(newDataMatrix2[, 6])
finalDataMatrix[, "overtime"] = as.factor(newDataMatrix2[, 7])
finalDataMatrix[, "location.winner"] = as.factor(newDataMatrix2[, 8])
View(finalDataMatrix)
rm(list = c(newDataMatrix, newDataMatrix2, take2, foo, i, j, k, v, x))
rm(newDataMatrix)
rm(newDataMatrix2)
rm(take2)
rm(foo)
rm(i)
rm(j)
rm(k)
rm(v)
rm(x)
attach(finalDataMatrix)
scoreDiff = winning.score - losing.score
summary(scoreDiff)
summary(as.factor(winning.team))
View(as.factor(winning.team))
View(summary(as.factor(winning.team)))
?summary
summary(winning.team, maxsum = 361)
bothTeam = intersect(winning.team, losing.team)
bothTeam = as.factor(intersect(winning.team, losing.team))
head(bothTeam)
levels(bothTeam)
aboveFH = c(Null)
aboveFH = c()
sum(winning.team == "Pittsburgh")
sum(losing.team == "Pittsburgh")
aboveFH = c()
for(i in levels(bothTeam)){
if(sum(winning.team == i) >= sum(losing.team == i)){
aboveFH = c(aboveFH, i)
}
}
aboveFH = as.factor(c())
for(i in levels(bothTeam)){
if(sum(winning.team == i) >= sum(losing.team == i)){
aboveFH = c(aboveFH, i)
}
}
aboveFH = as.factor(aboveFH)
aboveFH
winnerDF = finalDataMatrix[(is.element(winning.team, aboveFH) & is.element(losing.team, aboveFH)) , ]
View(winnerDF)
netDF = cbind(winnerDF[, c(4, 2)], scoreDiff)
scoreDiff2 = winnerDF$winning.score - winnerDF$losing.score
netDF = cbind(winnerDF[, c(4, 2)], scoreDiff2)
bballnet = graph_from_data_frame(netDF)
library(igraph)
bballnet = graph_from_data_frame(netDF)
plotpoints = layout_with_fr(bballnet)
plotpoints = layout_(bballnet)
plot(bballnet, plotpoints, vertex.label.cex = 0.5, vertex.size = 5, edge.arrow.size = 0.1)
transitivity(as.undirected(bballnet, mode = "collapse"), weights = E(bballnet)$scoreDiff, type = "barrat")
transitivity(bballnet)
testlm = lm(scoreDiff ~ winning.team + losing.team + overtime + location.winner, data = finalDataMatrix)
?summary.lm
summary(testlm)$adj.r.squared
testlm2 = lm(scoreDiff2 ~ winning.team + losing.team + overtime + location.winner, data = winnerDF)
summary(testlm2)$adj.r.squared
summary(testlm2)$fstatistic
summary(testlm)$fstatistic
degree(bballnet)
?degree
degree(bballnet, mode = "all")
degree(bballnet, mode = "in")
degree(bballnet, mode = "out")
setwd("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension")
wave.1.network <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/wave 1 network.dat",
quote="\"", comment.char="")
wave.2.network <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/wave 2 network.dat",
quote="\"", comment.char="")
trust <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/Trust.dat",
quote="\"", comment.char="")
proDev <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/Prodev-proenv1-7.dat",
quote="\"", comment.char="")
gov <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/gov-nongov.dat",
quote="\"", comment.char="")
library(RSiena)
library(statnet)
wave.2.network[wave.2.network == 9] = NA
trust[trust$V2 == 11, 2] = NA
proDev[proDev == 11] = NA
proDev[proDev == 8] = NA
testNet = sienaDependent(array(c(as.matrix(wave.1.network)), dim=c(194, 194, 2)))
trustAtt =  sienaDependent(as.matrix(trust), type = "behavior")
trustCo = coCovar(as.matrix(trust)[, 1])
prodevAtt = coCovar(as.matrix(proDev)[, 1])
govAtt = coCovar(as.matrix(gov)[, 1])
rm(trustCo)
fullNet = sienaDataCreate(testNet, trustAtt, prodevAtt, govAtt)
myEff = getEffects(fullNet)
myEff = includeEffects(myEff, transTrip, inPop)
myEff = includeEffects(myEff, egoX, altX, simX, interaction1 = "prodevAtt")
myEff = includeEffects(myEff, egoX, altX, simX, interaction1 = "govAtt")
myEff = includeEffects(myEff, egoX, altX, simX, interaction1 = "trustAtt")
myEff = includeEffects(myEff, name = "trustAtt", effFrom, interaction1 = "govAtt")
myEff = includeEffects(myEff, name = "trustAtt", effFrom, interaction1 = "prodevAtt")
myEff = includeEffects(myEff, name = "trustAtt", effFrom, interaction1 = "trustCo")
myEff = includeEffects(myEff, name = "trustAtt", avAlt, interaction1 = "testNet")
myEff
myEff
myEff
myEff = includeEffects(myEff, name = "trustAtt", totAlt, interaction1 = "testNet")
myEff = includeEffects(myEff, name = "trustAtt", avSim, interaction1 = "testNet")
myEff
myEff = getEffects(fullNet)
myEff
myEff = includeEffects(myEff, transTrip, inPop, outdeg)
myEff
myEff = includeEffects(myEff, transTrip, inPop, density)
fullNet = sienaDataCreate(testNet, trustAtt, prodevAtt, govAtt)
myEff = getEffects(fullNet)
myEff
myEff = includeEffects(myEff, transTrip, inPop, density)
