(tempSampFull$utility.summary[2,1] - mean(outSFull)) / sd(outSFull)
tempCtree$utility.summary[1,1] / expVar
tempCart$utility.summary[1,1] / expVar
tempParam$utility.summary[1,1] / expVar
tempSamp$utility.summary[1,1] / expVar
tempCtreeFull$utility.summary[1,1] / expVar
tempCartFull$utility.summary[1,1] / expVar
tempParamFull$utility.summary[1,1] / expVar
tempSampFull$utility.summary[1,1] / expVar
(tempCtree$utility.summary[1,1] - expVar) / expSD
(tempCart$utility.summary[1,1] - expVar) / expSD
(tempParam$utility.summary[1,1] - expVar) / expSD
(tempSamp$utility.summary[1,1] - expVar) / expSD
(tempCtreeFull$utility.summary[1,1] - expVar) / expSD
(tempCartFull$utility.summary[1,1] - expVar) / expSD
(tempParamFull$utility.summary[1,1] - expVar) / expSD
(tempSampFull$utility.summary[1,1] - expVar) / expSD
summary(ctreeComp1$ci.overlap)
summary(abs(ctreeComp1$coef.diff))
summary(cartComp1$ci.overlap)
summary(abs(cartComp1$coef.diff))
summary(paramComp1$ci.overlap)
summary(abs(paramComp1$coef.diff))
summary(sampComp1$ci.overlap)
summary(abs(sampComp1$coef.diff))
summary(ctreeComp2$ci.overlap)
summary(abs(ctreeComp2$coef.diff))
summary(cartComp2$ci.overlap)
summary(abs(cartComp2$coef.diff))
summary(paramComp2$ci.overlap)
summary(abs(paramComp2$coef.diff))
summary(sampComp2$ci.overlap)
summary(abs(sampComp2$coef.diff))
summary(ctreeComp1Full$ci.overlap)
summary(abs(ctreeComp1Full$coef.diff))
summary(cartComp1Full$ci.overlap)
summary(abs(cartComp1Full$coef.diff))
summary(paramComp1Full$ci.overlap)
summary(abs(paramComp1Full$coef.diff))
summary(sampComp1Full$ci.overlap)
summary(abs(sampComp1Full$coef.diff))
summary(ctreeComp2Full$ci.overlap)
summary(abs(ctreeComp2Full$coef.diff))
summary(cartComp2Full$ci.overlap)
summary(abs(cartComp2Full$coef.diff))
summary(paramComp2Full$ci.overlap)
summary(abs(paramComp2Full$coef.diff))
summary(sampComp2Full$ci.overlap)
summary(abs(sampComp2Full$coef.diff))
save.image("~/Dropbox/ADRC - Scotland/ADRC Utility Project/dataExamplesJRSS/cpsExample.RData")
load("~/Dropbox/ADRC - Scotland/ADRC Utility Project/dataExamplesJRSS/cpsExample.RData")
load("~/Dropbox/ADRC - Scotland/ADRC Utility Project/dataExamplesJRSS/shsExample.RData")
utilCartC$utility.summary[1, 1] / mean(outC)
utilParamC$utility.summary[1, 1] / mean(outP)
utilSampC$utility.summary[1, 1] / mean(outS)
utilCtreeC$utility.summary[1, 1] / mean(outCt)
abs(utilCartC$utility.summary[1, 1] - mean(outC)) / sd(outC)
abs(utilParamC$utility.summary[1, 1] - mean(outP)) / sd(outP)
abs(utilSampC$utility.summary[1, 1] - mean(outS)) / sd(outS)
abs(utilCtreeC$utility.summary[1, 1] - mean(outCt)) / sd(outCt)
utilCartL$utility.summary[1, 1] / expVar
utilParamL$utility.summary[1, 1] / expVar
utilSampL$utility.summary[1, 1] / expVar
utilCtreeL$utility.summary[1, 1] / expVar
abs(utilCartL$utility.summary[1, 1] - expVar) / expSD
abs(utilParamL$utility.summary[1, 1] - expVar) / expSD
abs(utilSampL$utility.summary[1, 1] - expVar) / expSD
abs(utilCtreeL$utility.summary[1, 1] - expVar) / expSD
utilCartC$utility.summary
utilCartL$utility.summary
utilParamC$utility.summary
utilParamL$utility.summary
utilSampC$utility.summary
utilSampL$utility.summary
summary(specUtils$model1C$ci.overlap)
summary(specUtils$model1P$ci.overlap)
summary(specUtils$model1S$ci.overlap)
ls()
summary(wemMaleCompCart$ci.overlap)
summary(wemMaleCompParam$ci.overlap)
summary(wemMaleCompSamp$ci.overlap)
summary(abs(wemMaleCompCart$coef.diff))
summary(abs(wemMaleCompParam$coef.diff))
summary(abs(wemMaleCompSamp$coef.diff))
summary(wemFemaleCompCart$ci.overlap)
summary(wemFemaleCompParam$ci.overlap)
summary(wemFemaleCompSamp$ci.overlap)
summary(abs(wemFemaleCompCart$coef.diff))
summary(abs(wemFemaleCompParam$coef.diff))
summary(abs(wemFemaleCompSamp$coef.diff))
summary(ghqMaleCompCart$ci.overlap)
summary(ghqMaleCompParam$ci.overlap)
summary(ghqMaleCompSamp$ci.overlap)
summary(abs(ghqMaleCompCart$coef.diff))
summary(abs(ghqMaleCompParam$coef.diff))
summary(abs(ghqMaleCompSamp$coef.diff))
summary(ghqFemaleCompCart$ci.overlap)
summary(ghqFemaleCompParam$ci.overlap)
summary(ghqFemaleCompSamp$ci.overlap)
summary(abs(ghqFemaleCompCart$coef.diff))
summary(abs(ghqFemaleCompParam$coef.diff))
summary(abs(ghqFemaleCompSamp$coef.diff))
plotDF = data.frame(matrix(NA, ncol = 3, nrow = 36*3,
dimnames = list(NULL, c("Male.Beta.Diff", "Male.Overlap", "Model"))))
plotDF[, "Male.Overlap"] = c(wemMaleCompCart$ci.overlap[,1],
wemMaleCompParam$ci.overlap[,1],
wemMaleCompSamp$ci.overlap[,1])
plotDF[, "Male.Beta.Diff"] = c(wemMaleCompCart$coef.diff[,1],
wemMaleCompParam$coef.diff[,1],
wemMaleCompSamp$coef.diff[,1])
plotDF[, "Model"] = rep(c("CART", "Parametric", "Sample"), each = 36)
library(ggplot2)
library(grid)
m2 = ggplot(plotDF, aes(x = Model, y = abs(Male.Beta.Diff))) +
geom_boxplot() +
theme(axis.text.x = element_text(colour="black"),
axis.text.y = element_text(colour="black")) +
xlab("Synthesising method") +
ylab(expression(paste(hat(beta)," standardized difference")))
m1 = ggplot(plotDF, aes(x = Model, y = Male.Overlap)) +
geom_boxplot() +
theme(axis.text.x = element_text(colour="black"),
axis.text.y = element_text(colour="black")) +
xlab("Synthesising method") +
ylab("95% CI overlap")
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
print(m1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1) )
print(m2, vp = viewport(layout.pos.row = 1, layout.pos.col = 2) )
`Idaho!!` <- read.csv("~/Documents/Classes/Spring2016/STAT506/project/Idaho!!.csv")
View(`Idaho!!`)
Idaho <- read.csv("~/Documents/Classes/Spring2016/STAT506/project/Idaho!!.csv")
rm(`Idaho!!`)
Idaho = Idaho[,-5]
View(Idaho)
levels(Idaho$County.Name)
summary(Idaho$County.Name)
hist(summary(Idaho$County.Name))
Idaho$Total.Students = summary(as.numeric(Idaho$Total.Students))
summary(as.numeric(Idaho$Total.Students))
summary(Idaho)
Idaho$Total.Students = as.numeric(Idaho$Total.Students)
Idaho$Full.Time.Equivalent..FTE..Teachers = as.numeric(Idaho$Full.Time.Equivalent..FTE..Teachers)
summary(Idaho)
boxplot(Total.Students ~ County.Name, data = Idaho)
boxplot(Full.Time.Equivalent..FTE..Teachers ~ County.Name, data = Idaho)
sum(Idaho$Full.Time.Equivalent..FTE..Teachers)
levels(Idaho$County.Name)
countyPP = rep(NA, 45)
levels(Idaho$County.Name)[1]
a = 1
sum(Idaho$Full.Time.Equivalent..FTE..Teachers[Idaho$County.Name =
levels(Idaho$County.Name)[a]])
sum(Idaho$Full.Time.Equivalent..FTE..Teachers[Idaho$County.Name =
levels(Idaho$County.Name)[a],])
sum(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[a],
"Full.Time.Equivalent..FTE..Teachers"])
for(a in 1:45){
countyPP[a] = sum(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[a],
"Full.Time.Equivalent..FTE..Teachers"])
}
countyPP
sum(countyPP)
countyPP = rep(NA, 45)
for(a in 1:45){
countyPP[a] = sum(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[a],
"Full.Time.Equivalent..FTE..Teachers"]) / sum(Idaho$Full.Time.Equivalent..FTE..Teachers)
}
countyPP
?rbinom
rmultinom(1, 10, countyPP)
sampleCounty = rmultinom(1, 10, countyPP)
sampleCounty = rmultinom(1, 10, countyPP)
sampleCounty
sampleCounty = rmultinom(1, 10, countyPP)
sampleCounty = rmultinom(1, 10, countyPP)
sampleCounty = rmultinom(1, 10, countyPP)
sampleCounty = rmultinom(1, 10, countyPP)
sampleCounty
which(sampleCounty > 0)
sampleDraw = rbind(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[7], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[10], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[10], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[14], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[15], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[28], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[28], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[29], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[34], ])
sampleCounty = rmultinom(1, 8, countyPP)
c(sampleCounty)
t(sampleCounty)
sampleDraw = rbind(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[9], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[10], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[14], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[15], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[19], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[21], ])
sampleCounty = rmultinom(1, 8, countyPP)
t(sampleCounty)
sampleCounty = rmultinom(1, 8, countyPP)
t(sampleCounty)
sampleCounty = rmultinom(1, 8, countyPP)
t(sampleCounty)
sampleCounty = rmultinom(1, 8, countyPP)
t(sampleCounty)
sampleCounty = rmultinom(1, 8, countyPP)
t(sampleCounty)
sampleCounty = rmultinom(1, 8, countyPP)
t(sampleCounty)
sampleDraw = rbind(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[5], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[8], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[9], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[27], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[29], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[33], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[43], ])
nrow(sampleDraw)
y = cbind(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[5], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[8], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[9], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[27], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[29], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[33], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[43], ])
y1 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ]
y2 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[5], ]
y3 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[8], ]
y4 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[9], ]
y5 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[27], ]
y6 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[29], ]
y7 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[33], ]
y8 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[43], ]
sum(y1$Full.Time.Equivalent..FTE..Teachers)
sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)
sum(y2$Full.Time.Equivalent..FTE..Teachers)/nrow(y2)
sum(y3$Full.Time.Equivalent..FTE..Teachers)/nrow(y3)
sum(y4$Full.Time.Equivalent..FTE..Teachers)/nrow(y4)
sum(y5$Full.Time.Equivalent..FTE..Teachers)/nrow(y5)
sum(y6$Full.Time.Equivalent..FTE..Teachers)/nrow(y6)
sum(y7$Full.Time.Equivalent..FTE..Teachers)/nrow(y7)
sum(y8$Full.Time.Equivalent..FTE..Teachers)/nrow(y8)
sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)+
sum(y2$Full.Time.Equivalent..FTE..Teachers)/nrow(y2) +
sum(y3$Full.Time.Equivalent..FTE..Teachers)/nrow(y3)+
sum(y4$Full.Time.Equivalent..FTE..Teachers)/nrow(y4)+
sum(y5$Full.Time.Equivalent..FTE..Teachers)/nrow(y5)+
sum(y6$Full.Time.Equivalent..FTE..Teachers)/nrow(y6)+
sum(y7$Full.Time.Equivalent..FTE..Teachers)/nrow(y7)+
sum(y8$Full.Time.Equivalent..FTE..Teachers)/nrow(y8)
(sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)+
sum(y2$Full.Time.Equivalent..FTE..Teachers)/nrow(y2) +
sum(y3$Full.Time.Equivalent..FTE..Teachers)/nrow(y3)+
sum(y4$Full.Time.Equivalent..FTE..Teachers)/nrow(y4)+
sum(y5$Full.Time.Equivalent..FTE..Teachers)/nrow(y5)+
sum(y6$Full.Time.Equivalent..FTE..Teachers)/nrow(y6)+
sum(y7$Full.Time.Equivalent..FTE..Teachers)/nrow(y7)+
sum(y8$Full.Time.Equivalent..FTE..Teachers)/nrow(y8))*nrow(Idaho)/8
(sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)+
sum(y2$Full.Time.Equivalent..FTE..Teachers)/nrow(y2) +
sum(y3$Full.Time.Equivalent..FTE..Teachers)/nrow(y3)+
sum(y4$Full.Time.Equivalent..FTE..Teachers)/nrow(y4)+
sum(y5$Full.Time.Equivalent..FTE..Teachers)/nrow(y5)+
sum(y6$Full.Time.Equivalent..FTE..Teachers)/nrow(y6)+
sum(y7$Full.Time.Equivalent..FTE..Teachers)/nrow(y7)+
sum(y8$Full.Time.Equivalent..FTE..Teachers)/nrow(y8))/8
View(Idaho)
mean(Idaho$Full.Time.Equivalent..FTE..Teachers)
meanHat = (sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)+
sum(y2$Full.Time.Equivalent..FTE..Teachers)/nrow(y2) +
sum(y3$Full.Time.Equivalent..FTE..Teachers)/nrow(y3)+
sum(y4$Full.Time.Equivalent..FTE..Teachers)/nrow(y4)+
sum(y5$Full.Time.Equivalent..FTE..Teachers)/nrow(y5)+
sum(y6$Full.Time.Equivalent..FTE..Teachers)/nrow(y6)+
sum(y7$Full.Time.Equivalent..FTE..Teachers)/nrow(y7)+
sum(y8$Full.Time.Equivalent..FTE..Teachers)/nrow(y8))/8
mean(y1)
mean(y1$Full.Time.Equivalent..FTE..Teachers)
sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)
((mean(y1$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y2$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y3$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y4$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y5$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y6$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y7$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y8$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2)/(8*7)
hist(summary(Idaho$County.Name), main = "Histogram of Number of Schools in Counties",
ylab = "Frequency", xlab = "County")
?histog
?histogram
?hist
hist(summary(Idaho$County.Name), main = "Histogram of Number of Schools in Counties",
ylab = "Number of Counties", xlab = "Schools", breaks = 10)
hist(summary(Idaho$County.Name), main = "Histogram of Number of Schools in Counties",
ylab = "Number of Counties", xlab = "Number of Schools", breaks = 20)
countyPP
table(levels(Idaho$County.Name), countyPP)
?table
cbind(levels(Idaho$County.Name), countyPP)
?xtable
library(xtable)
?xtable
xtable(cbind(levels(Idaho$County.Name), countyPP))
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = 3)
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = 0,0,3)
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = c(0,0,3))
?xtable
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = c(3))
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = c(2))
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = c(0,3))
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = c(0,0,3))
xtable(cbind(levels(Idaho$County.Name), countyPP), digits = c(0,0,0))
xtable(data.frame(levels(Idaho$County.Name), countyPP), digits = c(0,0,0))
xtable(data.frame(levels(Idaho$County.Name), countyPP), digits = c(0,0,3))
xtable(data.frame(levels(Idaho$County.Name), countyPP), digits = c(0,0,3), type = 'html')
probTab = xtable(data.frame(levels(Idaho$County.Name), countyPP), digits = c(0,0,3))
print(probTab, type = 'html')
print(probTab)
probTab = xtable(data.frame(levels(Idaho$County.Name)[1:23], countyPP[1:23],
levels(Idaho$County.Name)[24:45], countyPP[24:45]), digits = c(0,0,3,0,0,3))
probTab = xtable(data.frame(levels(Idaho$County.Name)[1:23], countyPP[1:23],
levels(Idaho$County.Name)[23:45], countyPP[23:45]), digits = c(0,0,3,0,0,3))
probTab = xtable(data.frame(levels(Idaho$County.Name)[1:23], countyPP[1:23],
levels(Idaho$County.Name)[23:45], countyPP[23:45]), digits = c(0,0,3,0,3))
print(probTab)
levels(Idaho$County.Name)[c(1,5,8,9,27,29,33,43)]
c(mean(y1), mean(y2), mean(y3), mean(y4),
mean(y5), mean(y6), mean(y7), mean(y8))
c(mean(y1$Full.Time.Equivalent..FTE..Teachers), mean(y2$Full.Time.Equivalent..FTE..Teachers),
mean(y3$Full.Time.Equivalent..FTE..Teachers), mean(y4$Full.Time.Equivalent..FTE..Teachers),
mean(y5$Full.Time.Equivalent..FTE..Teachers), mean(y6$Full.Time.Equivalent..FTE..Teachers),
mean(y7$Full.Time.Equivalent..FTE..Teachers), mean(y8$Full.Time.Equivalent..FTE..Teachers))
c(nrow(y1), nrow(y2), nrow(y3), nrow(y4),
nrow(y5), nrow(y6), nrow(y7), nrow(y8))
meanHat = (sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)+
sum(y2$Full.Time.Equivalent..FTE..Teachers)/nrow(y2) +
sum(y3$Full.Time.Equivalent..FTE..Teachers)/nrow(y3)+
sum(y4$Full.Time.Equivalent..FTE..Teachers)/nrow(y4)+
sum(y5$Full.Time.Equivalent..FTE..Teachers)/nrow(y5)+
sum(y6$Full.Time.Equivalent..FTE..Teachers)/nrow(y6)+
sum(y7$Full.Time.Equivalent..FTE..Teachers)/nrow(y7)+
sum(y8$Full.Time.Equivalent..FTE..Teachers)/nrow(y8))/8
meanHat
((mean(y1$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y2$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y3$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y4$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y5$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y6$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y7$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y8$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2)/(8*7)
sqrt(((mean(y1$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y2$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y3$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y4$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y5$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y6$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y7$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y8$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2)/(8*7))
mean(Idaho$Full.Time.Equivalent..FTE..Teachers)
sampleCounty2 = rmultinom(1, 6, countyPP)
sampleCounty2
t(sampleCounty2)
sampleCounty2 = rmultinom(1, 6, countyPP)
t(sampleCounty2)
sampleDraw = rbind(Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[10], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[14], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[18], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[43], ],
Idaho[Idaho$County.Name == levels(Idaho$County.Name)[45], ])
nrow(sampleDraw)
y1 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[1], ]
y2 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[10], ]
y3 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[14], ]
y4 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[18], ]
y5 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[43], ]
y6 = Idaho[Idaho$County.Name == levels(Idaho$County.Name)[45], ]
meanHat = (sum(y1$Full.Time.Equivalent..FTE..Teachers)/nrow(y1)+
sum(y2$Full.Time.Equivalent..FTE..Teachers)/nrow(y2) +
sum(y3$Full.Time.Equivalent..FTE..Teachers)/nrow(y3)+
sum(y4$Full.Time.Equivalent..FTE..Teachers)/nrow(y4)+
sum(y5$Full.Time.Equivalent..FTE..Teachers)/nrow(y5)+
sum(y6$Full.Time.Equivalent..FTE..Teachers)/nrow(y6)) / 6
meanHat
((mean(y1$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y2$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y3$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y4$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y5$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y6$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2) / (6 * 5)
sqrt(((mean(y1$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y2$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y3$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y4$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y5$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2 +
(mean(y6$Full.Time.Equivalent..FTE..Teachers) - meanHat)^2) / (6 * 5))
levels(Idaho$County.Name)[c(1, 10, 14, 18, 43, 45)]
c(mean(y1$Full.Time.Equivalent..FTE..Teachers), mean(y2$Full.Time.Equivalent..FTE..Teachers),
mean(y3$Full.Time.Equivalent..FTE..Teachers), mean(y4$Full.Time.Equivalent..FTE..Teachers),
mean(y5$Full.Time.Equivalent..FTE..Teachers), mean(y6$Full.Time.Equivalent..FTE..Teachers))
c(nrow(y1), nrow(y2), nrow(y3), nrow(y4),
nrow(y5), nrow(y6))
View(Idaho)
hist(Idaho$Full.Time.Equivalent..FTE..Teachers)
hist(Idaho$Full.Time.Equivalent..FTE..Teachers)
Idaho <- read.csv("~/Documents/Classes/Spring2016/STAT506/project/Idaho!!.csv")
?read.csv
Idaho <- read.csv("~/Documents/Classes/Spring2016/STAT506/project/Idaho!!.csv", stringsAsFactors = F)
Idaho$Total.Students = as.numeric(Idaho$Total.Students)
Idaho <- read.csv("~/Documents/Classes/Spring2016/STAT506/project/Idaho!!.csv", stringsAsFactors = F)
Idaho$Total.Students
as.numeric(Idaho$Total.Students)
Idaho$Total.Students = as.numeric(Idaho$Total.Students)
Idaho$Full.Time.Equivalent..FTE..Teachers = as.numeric(Idaho$Full.Time.Equivalent..FTE..Teachers)
summary(Idaho)
Idaho = Idaho[,-5]
levels(Idaho$County.Name)[1]
Idaho$School.Name = as.factor(Idaho$School.Name)
Idaho$County.Name = as.factor(Idaho$County.Name)
levels(Idaho$County.Name)[1]
Idaho <- read.csv("~/Documents/Classes/Spring2016/STAT506/project/Idaho!!.csv", stringsAsFactors = F)
Idaho = Idaho[,-5]
Idaho$Total.Students = as.numeric(Idaho$Total.Students)
Idaho$Full.Time.Equivalent..FTE..Teachers = as.numeric(Idaho$Full.Time.Equivalent..FTE..Teachers)
View(Idaho)
summary(Idaho)
unique(Idaho$County.Name)
sum(Idaho$Full.Time.Equivalent..FTE..Teachers)
sum(Idaho$Full.Time.Equivalent..FTE..Teachers, na.rm = T)
Idaho = Idaho[-619, ]
sum(Idaho$Full.Time.Equivalent..FTE..Teachers)
unique(Idaho$County.Name)
cor(Idaho$Total.Students, Idaho$Full.Time.Equivalent..FTE..Teachers)
plot(Idaho$Total.Students, Idaho$Full.Time.Equivalent..FTE..Teachers)
summary(lm(Idaho$Full.Time.Equivalent..FTE..Teachers ~ Idaho$Total.Students))
save.image("~/Documents/Classes/Spring2016/STAT506/project/projectData.RData")
setwd("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension")
wave.1.network <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/wave 1 network.dat",
quote="\"", comment.char="")
wave.2.network <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/wave 2 network.dat",
quote="\"", comment.char="")
trust <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/Trust.dat",
quote="\"", comment.char="")
proDev <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/Prodev-proenv1-7.dat",
quote="\"", comment.char="")
gov <- read.table("~/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/data/gov-nongov.dat",
quote="\"", comment.char="")
library(igraph)
wave.1.network[wave.1.network == 10] = 0
wave1Net = graph_from_adjacency_matrix(as.matrix(wave.1.network), mode = "directed")
V(wave1Net)$group = c(rep(1, 19), rep(2, 13), rep(3, 24), rep(4, 21), rep(5, 16),
rep(6, 21), rep(7, 25), rep(8, 20), rep(9, 20), rep(10, 15))
V(wave1Net)$trust = trust$V1
V(wave1Net)$prodev = proDev
V(wave1Net)$gov = gov
summary(wave1Net)
mean(degree(wave1Net, mode = "in"))
summary(as.factor(degree(wave1Net, mode = "out")))
dC = dyad_census(wave1Net)
dC
tC = triad_census(wave1Net)
names(tC) = c("003", "012", "102", "021D", "021U", "021C", "111D", "111U", "030T", "030C", "201",
"120D", "120U", "120C", "210", "300")
tC
53 + 54 + 6 + 15 + 37 + 6 + 16 + 18
286 + 54 + 3 + 30 + 120 + 6 + 16 + 18
wave.2.network = wave.2.network[-(which(trust$V2 == 11)), ]
wave.2.network = wave.2.network[, -(which(trust$V2 == 11))]
removeID = 1
for(i in 2:125){
if(sum(wave.2.network[i, ] < 9) == 0){
removeID = c(removeID, i)
}
}
wave.2.network = wave.2.network[-(removeID[-1]), ]
wave.2.network = wave.2.network[, -(removeID[-1])]
wave.2.network[wave.2.network == 10] = 0
wave2Net = graph_from_adjacency_matrix(as.matrix(wave.2.network), mode = "directed")
V(wave2Net)$group = c(rep(1, 9), rep(2, 10), rep(3, 19), rep(4, 8), rep(5, 8),
rep(6, 12), rep(7, 17), rep(8, 10), rep(9, 14), rep(10, 11))
for(i in 1:118){
if(wave.2.network[i,i] == 1){
print(i)
}
}
summary(wave2Net)
mean(degree(wave2Net, mode = "in"))
diag(wave.2.network) = 0
wave2Net = graph_from_adjacency_matrix(as.matrix(wave.2.network), mode = "directed")
V(wave2Net)$group = c(rep(1, 9), rep(2, 10), rep(3, 19), rep(4, 8), rep(5, 8),
rep(6, 12), rep(7, 17), rep(8, 10), rep(9, 14), rep(10, 11))
summary(wave2Net)
mean(degree(wave2Net, mode = "in"))
dC = dyad_census(wave2Net)
dC
names(tC) = c("003", "012", "102", "021D", "021U", "021C", "111D", "111U", "030T", "030C", "201",
"120D", "120U", "120C", "210", "300")
tC
tC = triad_census(wave2Net)
names(tC) = c("003", "012", "102", "021D", "021U", "021C", "111D", "111U", "030T", "030C", "201",
"120D", "120U", "120C", "210", "300")
tC
27 + 5 + 19
24 + 27 + 10 + 19 + 7 + 6 + 7 + 16
191 + 54 + 5 + 38 + 81 + 6 + 7 + 16
