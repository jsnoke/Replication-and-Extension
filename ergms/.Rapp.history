yhat
Mi = c(18,15,12,10,16)
cor(yhat,Mi)
plot(yhat,Mi)
summary(lm(yhat~Mi))
sum(yhat)/sum(Mi)
sum(yhat)/sum(Mi)*4000
sum((yhat - 0.623*Mi)^2)
300*295/5
17700/4
4425*344.55
4425*344.55+30.19
library(optimx)
install.packages("optimx")
library(optimx)
62/48*(10/4)*119
62/48
y = c(56,6)
var(y)
x = c(44,4)
sum((y - 1.29*x)^2)
10*6*(1250/4)+200/8*1.28
1.28/(1250-1.28)
1.28/(1250-1.28)/2
sqrt(1.28/(1250-1.28)/2)
336/500
164/500
0.672*280+0.328*110
(280-224.24)^2 + (110-224.24)^2
0.672*(280-224.24)^2 + 0.328*(110-224.24)^2
335/499 - 111/152
335/499 - 111/4999
0.672*160^2/112
163/499 - 40/4999
0.328*60^2/41
0.6491382*153.6+0.3186517*28.8
4500/5000
0.9/499
6370.22*0.0018
4999/5000*108.88
11.47+108.9
small = c(52	,35,	34,	45,	51,	32,	28,	33,	40,	45)
med = c(64, 90, 84, 72, 94, 80)
large = c(217, 150, 196, 159)
mean(small)
mean(med)
mean(large)
60/100*39.5
30/100*80.67
10/100*180.5
23.7+24.2+18.1
66*770
0.6*(39.5-66)^2+0.3*(80.7-66)^2+0.1*(180.5-66)^2
59/99-9/769
29/99-5/769
9/99-3/769
0.584*.6*var(small)/10
0.286*0.3*var(med)/6
0.087*0.1*var(large)/4
2.45+1.80+2.15
770^2*(670/770)/99
5211.1*1797.2+(769/770)*6.4
sqrt(9365395)
runif(1,0,1) > 0.5
runif(1,0,1)
(8/17 - 1/4)*2
(4/17)*(8/17)*(1-8/17)
sqrt()(4/17)*(8/17)*(1-8/17))
sqrt((4/17)*(8/17)*(1-8/17))
(3/17 - 1/24)*2
sqrt((4/17)*(3/17)*(1-3/17))
(4/17)*(3/17)*(1-3/17)
(7/11 - 1/2)*2
(7/11 - 1/4)*2
(4/11)*(7/11)*(1-7/11)
sqrt((4/11)*(7/11)*(1-7/11))
(2/11 - 1/24)*2
sqrt((4/11)*(2/11)*(1-2/11))
30/365
1/2
1/12
30*4/(365*3+366)
44/120
76.120
76/120
44/120*26.4+76/120*16.2
(26.4-19.94)^2
(16.2-19.94)^2
1400/(1520*119)
0.366*41.7+0.633*13.99
0.007739*24.12
43/199-43/1519
0.366*4.2^2/44
0.188*0.147
75/119-21/1519
0.633*3.2^2/44
0.633*3.2^2/22
0.616*0.295
0.0276+0.182
1519/1520*0.2096
0.187+0.209
sqrt(0.396)
0.366*4.2^2+0.633*3.2^2+0.366*0.633*(26.4-16.2)^2
3.2^2
14*(37.04-0.633*10.24)
10.24*2.5*0.366
427.81/9.37
sqrt(45.66)
1600*(37.04+(5.76)*0.633*10.24)/(1600*1.2^2+37.04)
51*0.633
y = matrix(c(5          ,8,         6,         8 ,        9   ,      10 ,#
5        ,  3 ,        5   ,      2 ,        5 ,        4,#
7        ,  8 ,        9 ,        8   ,      6,          8,#
4        ,  3,         6 ,        5  ,       4,          5  ,#
7        ,  8,         6    ,     7  ,       5,          9,#
6      ,    7   ,      6  ,       4,         7  ,        5 ,  #
1         , 2,         4  ,       3 ,        3 ,        2,#
6     ,     6 ,        7  ,       8 ,         8   ,      9))
y
y = matrix(c(5          ,8,         6,         8 ,        9   ,      10 ,#
5        ,  3 ,        5   ,      2 ,        5 ,        4,#
7        ,  8 ,        9 ,        8   ,      6,          8,#
4        ,  3,         6 ,        5  ,       4,          5  ,#
7        ,  8,         6    ,     7  ,       5,          9,#
6      ,    7   ,      6  ,       4,         7  ,        5 ,  #
1         , 2,         4  ,       3 ,        3 ,        2,#
6     ,     6 ,        7  ,       8 ,         8   ,      9), nrow = 8, ncol = 6)
y
y = matrix(c(5          ,8,         6,         8 ,        9   ,      10 ,#
5        ,  3 ,        5   ,      2 ,        5 ,        4,#
7        ,  8 ,        9 ,        8   ,      6,          8,#
4        ,  3,         6 ,        5  ,       4,          5  ,#
7        ,  8,         6    ,     7  ,       5,          9,#
6      ,    7   ,      6  ,       4,         7  ,        5 ,  #
1         , 2,         4  ,       3 ,        3 ,        2,#
6     ,     6 ,        7  ,       8 ,         8   ,      9), nrow = 8, ncol = 6, byrow = T)
y
rowMeans(y)
sum(rowMeans(y))/6
sum((rowMeans(y) - mean(y))^2)
mean(y)
sum(rowMeans(y))/8
26.58/56
sqrt(0.475)
y = c(38.5, 42.3, 32.4, 52.7, 53.2, 60.3, 53.7, 30.3, 34.5, 42.2, 43.0, 52.1, 31.2, 32.5, 38.2, 38.8, 45.5, 32.2, 51.3, 42.2)
length(y)
mean(y)
var(y)
sum((y - mean(y)))/19
sum((y - mean(y))^2)/19
628/660
628/660*(80.86/20)
sqrt(3.85)
ls()
names(ucart_logit1)
(6000/400)*10000
(10000*6000*9600*5600)/400^3
sqrt((10000*6000*9600*5600)/400^3)
7099.3*1.96
150000+13914.6
150000-13914.6
logMIAns
library(RSiena)
logMIAns
cartMIAns
ls()
rm(list = ls())
ls()
ls()
ans
names(ans)
names(summary(ans))
ans$effects
ans$Estimates
ans$estimates
ans$sd
ans$error
ans$theta
ans$epsilon
ans$covtheta
diag(ans$covtheta)
diag(ans$covtheta)^2
sqrt(diag(ans$covtheta))
ans$theta
ans
meanLog = sdLog = meanCart = sdCart = matrix(NA, nrow = 20, ncol = 10)
ls()
for(a in 1:10){#
	meanLog[, a] = logMIAns[[a]]$theta#
	sdLog[, a] = sqrt(diag(logMIAns[[a]]$covtheta))#
	meanCart[, a] = cartMIAns[[a]]$theta#
	sdCart[, a] = sqrt(diag(cartMIAns[[a]]$covtheta))#
}
rowMeans(meanLog)
rowMeans(sdLog)
rowMeans(sdLog)
rowMeans(sdLog)
rowMeans(meanCart)
rowMeans(sdCart)
library(xtable)
?xtable
fooLog = xtable(cbind(rowMeans(meanLog),rowMeans(sdLog)))
fooLog
fooLog = xtable(cbind(rowMeans(meanLog),rowMeans(sdLog)),rowMeans(meanCart),rowMeans(sdCart))
fooLog = xtable(cbind(rowMeans(meanLog),rowMeans(sdLog),rowMeans(meanCart),rowMeans(sdCart)))
fooLog
rm(list = ls())
ls()
length(structuralERGM)
cartERGM = structuralERGM
logERGM = structuralERGM
ls()
summary(structuralERGM)
library(statnet)
summary(structuralERGM)
names(summary(structuralERGM))
summary(structuralERGM)$estimate
summary(structuralERGM)$coefs
meanLog = sdLog = meanCart = sdCart = matrix(NA, nrow = 6, ncol = 10)
summary(structuralERGM)$coefs[,2]
for(a in 1:10){#
	meanLog[, a] = summary(logERGM[[a]])$coefs[,1]#
	sdLog[, a] = summary(logERGM[[a]])$coefs[,2]#
	meanCart[, a] = summary(cartERGM[[a]])$coefs[,1]#
	sdCart[, a] = summary(cartERGM[[a]])$coefs[,2]#
}
fooLog = xtable(cbind(rowMeans(meanLog),rowMeans(sdLog),rowMeans(meanCart),rowMeans(sdCart)))
fooLog = xtable(cbind(rowMeans(meanLog),rowMeans(sdLog),rowMeans(meanCart),rowMeans(sdCart)))
fooLog
fooLog = xtable(cbind(summary(structuralERGM)$coefs[,1:2],rowMeans(meanLog),rowMeans(sdLog),rowMeans(meanCart),rowMeans(sdCart)))
fooLog = xtable(cbind(summary(structuralERGM)$coefs[,1:2],rowMeans(meanLog),rowMeans(sdLog),rowMeans(meanCart),rowMeans(sdCart)))
fooLog
rm(list = ls())
getwd()
setwd("/Users/jvsnoke/Documents/Classes/Spring2016/PLSC597E/Replication-and-Extension/ergms")
logERGM = load("logAllERGM.RData")
logERGM = load("logAllERGMs.RData")
cartERGM = load("cartAllERGMs.RData")
summary(logAllERGMs[[1]])
ls()
summary(logERGM[[1]])
summary(logERGM)
class(logERGM)
summary(cartERGM)
summary(allStructuralERGM)
load("logAllERGMs.RData")
logERGM = allStructuralERGM
load("cartAllERGMs.RData")
cartERGM = allStructuralERGM
summary(cartERGM)
class(logERGM)
summary(logERGM)
load("baseAllERGMs.RData")
ls()
meanLog = sdLog = meanCart = sdCart = matrix(NA, nrow = 15, ncol = 10)#
#
for(a in 1:10){#
	meanLog[, a] = summary(logERGM[[a]])$coefs[,1]#
	sdLog[, a] = summary(logERGM[[a]])$coefs[,2]#
	meanCart[, a] = summary(cartERGM[[a]])$coefs[,1]#
	sdCart[, a] = summary(cartERGM[[a]])$coefs[,2]#
}
ls()
fooLog = xtable(cbind(summary(allStructuralERGM)$coefs[,1:2],rowMeans(meanLog),rowMeans(sdLog),rowMeans(meanCart),rowMeans(sdCart)))
fooLog
ls()
summary(allStructuralERGM)
lapply(cartERGM, summary)
lapply(logERGM, summary)
rm(list = ls())
load("logStrucERGMs.RData")
load("logStrucERGM.RData")
ls()
logERGM = structuralERGM
load("cartStrucERGM.RData")
cartERGM = structuralERGM
load("baseStrucERGM.RData")
ls()
summary(structuralERGM)
lapply(logERGM, summary)
lapply(cartERGM, summary)
rm(list = ls())
load("modalSAO.RData")
ls()
load("cartMISAO.RData")
load("logMISAO.RData")
ls()
ans
